<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>menu[0] = "New Game";
menu[1] = "Continue";
menu[2] = "Options"
menu[3] = "Exit";

space = 64; //Space between options on screen
mpos = 0; //position the menu curosr is on at start

HitBox = false;
HitBox2 = false;
HitBox3 = false;
HitBox4 = false;

HoverBox = false;
HoverBox2 = false;
HoverBox3 = false;
HoverBox4 = false;

trigger = false;

globalvar OptionsHover;
OptionsHover = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!instance_exists(obj_optionsPC))
{
    /*
    
    move 0 = go to next rooom
    move 1 = continue
    move 2 = options
    move 3 = exit 
    
    */
    
    var move = 0; //temp var for changing cursor position

    move -= max(keyboard_check_pressed(vk_up),0); 
    move += max(keyboard_check_pressed(vk_down),0);

    if (move != 0)
    {
        mpos += move;
        if (mpos &lt; 0)
        {
            mpos = array_length_1d(menu) - 1;
        }
        if (mpos &gt; array_length_1d(menu) - 1)
        {
            mpos = 0;
        }
    }

    var push;
    push = max(keyboard_check_pressed(vk_enter),0);

    if (push == 1)
    {
        Script_Menu_PC();
    }
}

//Reset menu objects position if fullscreen is changed
if window_get_fullscreen()
{
    x = 64;
    y = 624;
    
    /************************************************/
    
    //New Game
        var MouseX = mouse_x - view_xview;
        var MouseY = mouse_y - view_yview;
    
        if(MouseX &gt;= 50
        &amp;&amp; MouseY &lt;= 500
        &amp;&amp; MouseX &lt;= 228
        &amp;&amp; MouseY &gt;= 475)
        {
            if(mouse_check_button_pressed(mb_left))
                {
                    HitBox = true;
                }
            HoverBox = true;
        }
        else
        {
            HoverBox = false;
        }
    
    //Continue
    
        if(MouseX &gt;= 50
        &amp;&amp; MouseY &lt;= 564
        &amp;&amp; MouseX &lt;= 188
        &amp;&amp; MouseY &gt;= 547)
        {
            if(mouse_check_button_pressed(mb_left))
                {
                    HitBox2 = true;
                }
            HoverBox2 = true;
        }
        else
        {
            HoverBox2 = false;
        }
    
    //Options
    if(OptionsHover != true)
    {
        if(MouseX &gt;= 50
        &amp;&amp; MouseY &lt;= 628
        &amp;&amp; MouseX &lt;= 168
        &amp;&amp; MouseY &gt;= 610)
        {
            if(mouse_check_button_pressed(mb_left))
                {
                    HitBox3 = true;
                    OptionsHover = true;
                }
            HoverBox3 = true;
        }
        else
        {
            HoverBox3 = false;
        }
    }
    
    //Exit
    
        if(MouseX &gt;= 50
        &amp;&amp; MouseY &lt;= 690
        &amp;&amp; MouseX &lt;= 105
        &amp;&amp; MouseY &gt;= 670)
        {
            if(mouse_check_button_pressed(mb_left))
                {
                    HitBox4 = true;
                }
            HoverBox4 = true;
            
        }
        else
        {
            HoverBox4 = false;
        }
        
}
else
{
    x = 64;
    y = 384;
}

//Collision boxes

if(HitBox == true)
{
    Script_Menu_PC();
}

if(HitBox2 == true)
{
    mpos = 1;
    Script_Menu_PC();
    HitBox2 = false;
}

if(HitBox3 == true)
{
    mpos = 2;
    Script_Menu_PC();
    HitBox3 = false; 
}

if(HitBox4 == true)
{
    mpos = 3;
    Script_Menu_PC();
    HitBox4 = false; 
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_halign(fa_left);
draw_set_font(fnt_HUD_Large1);
draw_set_color(c_white);

var m;
for (m = 0; m &lt; array_length_1d(menu); m += 1;)
{
    draw_text(x + space - 80, y + (m * space) - 150, string(menu[m]))
}

draw_sprite(spr_MenuCursor, 0, x- 55, y + mpos * space - 150);


/************| Click collision boxes |***************** */


draw_text(room_width/2,room_height/2, mouse_x - view_xview);
draw_text(room_width/2 - 200,room_height/2, "MouseX:");
draw_text(room_width/2 - 200,room_height/2 - 30, "MouseY:");
draw_text(room_width/2,room_height/2 - 30, mouse_y - view_yview);
//draw_text(10,10, move);


if(HoverBox == true)
{
    draw_sprite(spr_MenuText,0,138, 498);
}

if(HoverBox2 == true)
{
    draw_sprite(spr_MenuText,1,138, 563);
}

if(HoverBox3 == true)
{
    draw_sprite(spr_MenuText,2,138, 628);
}

if(HoverBox4 == true)
{
    draw_sprite(spr_MenuText,3,138, 693);
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
